// DONE REVIEWING: GITHUB COMMIT 7️⃣
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  AGENCY_OWNER
  AGENCY_ADMIN
  SUB_ACCOUNT_USER
  SUB_ACCOUNT_GUEST
}

enum INVITATION_STATUS {
  ACCEPTED
  REVOKED
  PENDING
}

enum Icon {
  CATEGORY
}

model User {
  id         String @id @default(uuid())
  avatar_url String @db.Text
  name       String
  email      String @unique
  role       Role   @default(SUB_ACCOUNT_USER)

  agency_id   String
  agency      Agency       @relation(fields: [agency_id], references: [id], onDelete: Cascade)
  permissions Permission[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([agency_id])
}

model Agency {
  id                   String  @id @default(uuid())
  customer_id          String  @default("") // Subscription
  connected_account_id String? @default("") // Strip

  logo_url String @db.Text
  name     String
  email    String @db.Text
  phone    String

  country  String
  state    String
  city     String
  zip_code String
  address  String

  goal       Int     @default(5)
  with_label Boolean @default(true)

  users           User[]
  sub_accounts    SubAccount[]
  invitations     Invitation[]
  sidebar_options AgencySidebarOption[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model SubAccount {
  id                   String  @id @default(uuid())
  connected_account_id String? @default("") // Strip

  logo_url String @db.Text
  name     String
  email    String @db.Text
  phone    String

  country  String
  state    String
  city     String
  zip_code String
  address  String

  goal            Int                       @default(5)
  agency_id       String
  agency          Agency                    @relation(fields: [agency_id], references: [id], onDelete: Cascade)
  permissions     Permission[]
  sidebar_options SubAccountSidebarOption[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([agency_id])
}

model Permission {
  id String @id @default(uuid())

  email String
  user  User   @relation(fields: [email], references: [email], onDelete: Cascade)

  sub_account_id String
  sub_account    SubAccount @relation(fields: [sub_account_id], references: [id], onDelete: Cascade)

  access Boolean

  @@index([email])
  @@index([sub_account_id])
}

model AgencySidebarOption {
  id   String @id @default(uuid())
  icon Icon   @default(CATEGORY)
  name String @default("Menu")
  link String @default("/agency")

  agency_id String
  agency    Agency? @relation(fields: [agency_id], references: [id], onDelete: Cascade)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([agency_id])
}

model SubAccountSidebarOption {
  id   String @id @default(uuid())
  icon Icon   @default(CATEGORY)
  name String @default("Menu")
  link String @default("/sub-account")

  sub_account_id String
  sub_account    SubAccount? @relation(fields: [sub_account_id], references: [id], onDelete: Cascade)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([sub_account_id])
}

model Invitation {
  id     String            @id @default(uuid())
  email  String            @unique
  role   Role              @default(SUB_ACCOUNT_USER)
  status INVITATION_STATUS @default(PENDING)

  agency_id String
  agency    Agency @relation(fields: [agency_id], references: [id], onDelete: Cascade)

  @@index([agency_id])
}
